= localization_scopes

This plugin adds the helper methods t_scope, t_context_scope and tc for scope management of the Rails core I18n.
It also allows to translate using multiple scope parameters like t(:general, :states, :normal).

= Features
* t_scope is a shortcut for using with_options with :scope to DRY blocks of translations with the same scope.
* t_context_scope opens code blocks with scopes equal to the file you are in, e.g. 'settings' for controllers/settings_controller.rb or 'settings.list' for views/settings/list.html.erb.
* tc is like the t translation method but with context scope
* translate using multiple scope parameters like t(:general, :states, :normal)
* enable Rails I18n helpers and localization_scopes helpers in models and mailers

= Further information

* {Discussion}[http://groups.google.com/group/rails-i18n/t/9aae903fd5df67d] on Google Groups


= Example usage
== Scopes & Contexts
In app/controllers/settings_controller.rb

flash[:notice] = tc(:not_found) # looks up t('settings.not_found')

In app/views/settings/list.html.erb

<%=tc :heading1 %>
<%=tc :subnote %>
<%=tc :notice %>

equals

<% t_context_scope do |s| %>
  <%=s.t :heading1 %>
  <%=s.t :subnote %>
  <%=s.t :notice %>
<% end %>

equals

<% t_scope 'settings.list' do |s| %>
  <%=s.t :heading1 %>
  <%=s.t :subnote %>
  <%=s.t :notice %>
<% end %>

equals

<%=t 'settings.list.heading1' %>
<%=t 'settings.list.subnote' %>
<%=t 'settings.list.notice' %>

== Scope parameters
<%=t :settings, :list, :heading1 %>

equals

<%=t :settings, 'list.heading1' %>

equals

<%=t :list, 'heading1', :scope => :settings %>

You can also use an array for bulk lookup in the last parameter, so

<%=t 'settings.list', [:heading1, :subnote, :notice] %>

equals

<%=t :settings, :list, [:heading1, :subnote, :notice] %>

equals

<%=t [:heading1, :subnote, :notice], :scope => 'settings.list' %>

equals

<%=t [:heading1, :subnote, :notice], :scope => [:settings, :list] %>

= About
Based on simple_localization plugin by Stephan Soller and contributors.

Copyright (c) by Arno Dirlam, released under the MIT license.

